{"version":3,"sources":["TodoInput.js","TodoItem.js","App.js","index.js"],"names":["TodoInput","react_default","a","createElement","type","value","this","props","content","onChange","changeTitle","bind","onKeyPress","submit","event","key","onSubmit","Component","TodoItem","todo","title","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newTodo","todoList","todos","map","item","index","src_TodoItem","className","src_TodoInput","addTodo","setState","target","console","log","push","id","idMaker","status","deleted","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8OAoBeA,mLAhBX,OACEC,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,MAAOC,KAAKC,MAAMC,QACnCC,SAAUH,KAAKI,YAAYC,KAAKL,MAChCM,WAAYN,KAAKO,OAAOF,KAAKL,uCAG5BQ,GACY,UAAdA,EAAMC,KACPT,KAAKC,MAAMS,SAASF,uCAGZA,GACVR,KAAKC,MAAME,SAASK,UAdAG,aCMTC,mLAJX,OAAOjB,EAAAC,EAAAC,cAAA,WAAMG,KAAKC,MAAMY,KAAKC,cAFVH,aCsDRI,iCAhDb,SAAAA,EAAYd,GAAM,IAAAe,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAe,IAChBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAArB,KAAMC,KACDqB,MAAQ,CACXC,QAAS,GACTC,SAAU,IAJIR,wEAQhB,IAAIS,EAAQzB,KAAKsB,MAAME,SAASE,IAAI,SAACC,EAAKC,GACxC,OACEjC,EAAAC,EAAAC,cAAA,MAAIY,IAAKmB,GACPjC,EAAAC,EAAAC,cAACgC,EAAD,CAAUhB,KAAMc,OAItB,OACEhC,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,OACbnC,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACkC,EAAD,CAAW7B,QAASF,KAAKsB,MAAMC,QAC7BpB,SAAUH,KAAKI,YAAYC,KAAKL,MAChCU,SAAUV,KAAKgC,QAAQ3B,KAAKL,QAC9BL,EAAAC,EAAAC,cAAA,UACG4B,wCAKGjB,GACVR,KAAKiC,SAAS,CACZV,QAASf,EAAM0B,OAAOnC,MACtByB,SAAUxB,KAAKsB,MAAME,2CAGjBhB,GACN2B,QAAQC,IAAI5B,GACZR,KAAKsB,MAAME,SAASa,KAAK,CACvBC,GAAIC,IACJzB,MAAON,EAAM0B,OAAOnC,MACpByC,OAAQ,KACRC,SAAS,IAEXzC,KAAKiC,SAAS,CACZV,QAAS,GACTC,SAAUxB,KAAKsB,MAAME,kBA5CTb,cAmDd2B,EAAK,EACT,SAASC,IAEP,OADAD,GAAM,ECvDRI,IAASC,OACPhD,EAAAC,EAAAC,cAAC+C,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.f46a5e00.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\n\r\nclass TodoInput extends Component{\r\n  render(){\r\n    return (\r\n      <input type=\"text\" value={this.props.content} \r\n        onChange={this.changeTitle.bind(this)}\r\n        onKeyPress={this.submit.bind(this)} />\r\n    )\r\n  }\r\n  submit(event){\r\n    if(event.key === 'Enter'){\r\n      this.props.onSubmit(event)\r\n    }\r\n  }\r\n  changeTitle(event){\r\n    this.props.onChange(event)\r\n  }\r\n}\r\n\r\nexport default TodoInput;","import React,{ Component } from 'react';\r\n\r\nclass TodoItem extends Component{\r\n  render(){\r\n    return <div>{this.props.todo.title}</div>\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React,{ Component } from 'react';\nimport TodoInput from './TodoInput';\nimport TodoItem from './TodoItem';\nimport 'normalize.css';\nimport './reset.css';\nimport './App.css';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      newTodo: '',\n      todoList: []\n    }\n  }\n  render(){\n    let todos = this.state.todoList.map((item,index)=>{\n      return (\n        <li key={index}>\n          <TodoItem todo={item} />\n        </li>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <h1>我的待办</h1>\n        <TodoInput content={this.state.newTodo} \n          onChange={this.changeTitle.bind(this)}\n          onSubmit={this.addTodo.bind(this)} />\n        <ol>\n          {todos}\n        </ol>\n      </div>\n    );\n  }\n  changeTitle(event){\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n  addTodo(event){\n    console.log(event)\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n}\n\nexport default App;\n\nlet id = 0\nfunction idMaker(){\n  id += 1\n  return id\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}